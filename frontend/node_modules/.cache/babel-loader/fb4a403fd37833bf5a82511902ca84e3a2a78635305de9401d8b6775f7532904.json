{"ast":null,"code":"var _jsxFileName = \"D:\\\\UDW\\\\my-am-app\\\\frontend\\\\src\\\\contexts\\\\NewsContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/contexts/NewsContext.js\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet tinTucData = [];\ntry {\n  tinTucData = require('../Data/tinTucData').default;\n} catch (error) {\n  console.warn('Không thể tìm thấy dữ liệu từ tinTucData.js, sử dụng mảng rỗng.');\n  tinTucData = [];\n}\n// Tạo context\nconst NewsContext = /*#__PURE__*/createContext();\n\n// Hook để sử dụng context\nexport const useNews = () => {\n  _s();\n  return useContext(NewsContext);\n};\n\n// Provider component\n_s(useNews, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const NewsProvider = ({\n  children\n}) => {\n  _s2();\n  const [articles, setArticles] = useState([]);\n  const [comments, setComments] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Khởi tạo dữ liệu\n  useEffect(() => {\n    // Lấy dữ liệu từ localStorage nếu có\n    const savedArticles = localStorage.getItem('articles');\n    const savedComments = localStorage.getItem('comments');\n    if (savedArticles) {\n      setArticles(JSON.parse(savedArticles));\n    } else {\n      // Nếu không có, sử dụng dữ liệu mặc định\n      setArticles(tinTucData.map(article => ({\n        ...article,\n        averageRating: 0,\n        totalRatings: 0,\n        commentCount: 0\n      })));\n    }\n    if (savedComments) {\n      setComments(JSON.parse(savedComments));\n    } else {\n      // Khởi tạo object comments trống\n      const initialComments = {};\n      tinTucData.forEach(article => {\n        initialComments[article.id] = [];\n      });\n      setComments(initialComments);\n    }\n    setIsLoading(false);\n  }, []);\n\n  // Lưu dữ liệu vào localStorage khi có thay đổi\n  useEffect(() => {\n    if (!isLoading) {\n      localStorage.setItem('articles', JSON.stringify(articles));\n      localStorage.setItem('comments', JSON.stringify(comments));\n    }\n  }, [articles, comments, isLoading]);\n\n  // Thêm tin tức mới\n  const addArticle = newArticle => {\n    const id = articles.length > 0 ? Math.max(...articles.map(a => a.id)) + 1 : 1;\n    const articleWithMetadata = {\n      ...newArticle,\n      id,\n      date: new Date().toISOString().split('T')[0],\n      averageRating: 0,\n      totalRatings: 0,\n      commentCount: 0\n    };\n    setArticles([...articles, articleWithMetadata]);\n    setComments({\n      ...comments,\n      [id]: []\n    });\n  };\n\n  // Cập nhật tin tức\n  const updateArticle = (id, updatedArticle) => {\n    setArticles(articles.map(article => article.id === id ? {\n      ...article,\n      ...updatedArticle,\n      id\n    } : article));\n  };\n\n  // Xóa tin tức\n  const deleteArticle = id => {\n    setArticles(articles.filter(article => article.id !== id));\n\n    // Xóa comments của bài viết\n    const newComments = {\n      ...comments\n    };\n    delete newComments[id];\n    setComments(newComments);\n  };\n\n  // Thêm comment mới\n  const addComment = (articleId, newComment) => {\n    const commentWithId = {\n      id: Date.now(),\n      ...newComment,\n      date: new Date().toLocaleDateString('vi-VN')\n    };\n    setComments({\n      ...comments,\n      [articleId]: [commentWithId, ...(comments[articleId] || [])]\n    });\n\n    // Cập nhật số lượng comment trong bài viết\n    setArticles(articles.map(article => {\n      if (article.id === articleId) {\n        return {\n          ...article,\n          commentCount: (article.commentCount || 0) + 1\n        };\n      }\n      return article;\n    }));\n  };\n\n  // Thêm đánh giá mới\n  const addRating = (articleId, rating) => {\n    setArticles(articles.map(article => {\n      if (article.id === articleId) {\n        const totalRatings = (article.totalRatings || 0) + 1;\n        const totalScore = (article.averageRating || 0) * (article.totalRatings || 0) + rating;\n        const newAverageRating = totalScore / totalRatings;\n        return {\n          ...article,\n          averageRating: newAverageRating,\n          totalRatings: totalRatings\n        };\n      }\n      return article;\n    }));\n  };\n\n  // Xóa comment\n  const deleteComment = (articleId, commentId) => {\n    if (comments[articleId]) {\n      setComments({\n        ...comments,\n        [articleId]: comments[articleId].filter(comment => comment.id !== commentId)\n      });\n\n      // Cập nhật số lượng comment trong bài viết\n      setArticles(articles.map(article => {\n        if (article.id === articleId) {\n          return {\n            ...article,\n            commentCount: Math.max((article.commentCount || 0) - 1, 0)\n          };\n        }\n        return article;\n      }));\n    }\n  };\n\n  // Lấy tin tức theo ID\n  const getArticleById = id => {\n    return articles.find(article => article.id === id) || null;\n  };\n\n  // Lấy comments của một bài viết\n  const getCommentsByArticleId = articleId => {\n    return comments[articleId] || [];\n  };\n\n  // Các giá trị và hàm được cung cấp qua context\n  const value = {\n    articles,\n    comments,\n    isLoading,\n    addArticle,\n    updateArticle,\n    deleteArticle,\n    addComment,\n    deleteComment,\n    addRating,\n    getArticleById,\n    getCommentsByArticleId\n  };\n  return /*#__PURE__*/_jsxDEV(NewsContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this);\n};\n_s2(NewsProvider, \"9JYnev6L8JpQniCmbKzTYgYDiEI=\");\n_c = NewsProvider;\nvar _c;\n$RefreshReg$(_c, \"NewsProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","jsxDEV","_jsxDEV","tinTucData","require","default","error","console","warn","NewsContext","useNews","_s","NewsProvider","children","_s2","articles","setArticles","comments","setComments","isLoading","setIsLoading","savedArticles","localStorage","getItem","savedComments","JSON","parse","map","article","averageRating","totalRatings","commentCount","initialComments","forEach","id","setItem","stringify","addArticle","newArticle","length","Math","max","a","articleWithMetadata","date","Date","toISOString","split","updateArticle","updatedArticle","deleteArticle","filter","newComments","addComment","articleId","newComment","commentWithId","now","toLocaleDateString","addRating","rating","totalScore","newAverageRating","deleteComment","commentId","comment","getArticleById","find","getCommentsByArticleId","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/UDW/my-am-app/frontend/src/contexts/NewsContext.js"],"sourcesContent":["// src/contexts/NewsContext.js\r\nimport React, { createContext, useState, useEffect, useContext } from 'react';\r\n\r\nlet tinTucData = [];\r\ntry {\r\n  tinTucData = require('../Data/tinTucData').default;\r\n} catch (error) {\r\n  console.warn('Không thể tìm thấy dữ liệu từ tinTucData.js, sử dụng mảng rỗng.');\r\n  tinTucData = [];\r\n}\r\n// Tạo context\r\nconst NewsContext = createContext();\r\n\r\n// Hook để sử dụng context\r\nexport const useNews = () => useContext(NewsContext);\r\n\r\n// Provider component\r\nexport const NewsProvider = ({ children }) => {\r\n  const [articles, setArticles] = useState([]);\r\n  const [comments, setComments] = useState({});\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // Khởi tạo dữ liệu\r\n  useEffect(() => {\r\n    // Lấy dữ liệu từ localStorage nếu có\r\n    const savedArticles = localStorage.getItem('articles');\r\n    const savedComments = localStorage.getItem('comments');\r\n\r\n    if (savedArticles) {\r\n      setArticles(JSON.parse(savedArticles));\r\n    } else {\r\n      // Nếu không có, sử dụng dữ liệu mặc định\r\n      setArticles(tinTucData.map(article => ({\r\n        ...article,\r\n        averageRating: 0,\r\n        totalRatings: 0,\r\n        commentCount: 0\r\n      })));\r\n    }\r\n\r\n    if (savedComments) {\r\n      setComments(JSON.parse(savedComments));\r\n    } else {\r\n      // Khởi tạo object comments trống\r\n      const initialComments = {};\r\n      tinTucData.forEach(article => {\r\n        initialComments[article.id] = [];\r\n      });\r\n      setComments(initialComments);\r\n    }\r\n\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  // Lưu dữ liệu vào localStorage khi có thay đổi\r\n  useEffect(() => {\r\n    if (!isLoading) {\r\n      localStorage.setItem('articles', JSON.stringify(articles));\r\n      localStorage.setItem('comments', JSON.stringify(comments));\r\n    }\r\n  }, [articles, comments, isLoading]);\r\n\r\n  // Thêm tin tức mới\r\n  const addArticle = (newArticle) => {\r\n    const id = articles.length > 0 ? Math.max(...articles.map(a => a.id)) + 1 : 1;\r\n    const articleWithMetadata = {\r\n      ...newArticle,\r\n      id,\r\n      date: new Date().toISOString().split('T')[0],\r\n      averageRating: 0,\r\n      totalRatings: 0,\r\n      commentCount: 0\r\n    };\r\n    \r\n    setArticles([...articles, articleWithMetadata]);\r\n    setComments({\r\n      ...comments,\r\n      [id]: []\r\n    });\r\n  };\r\n\r\n  // Cập nhật tin tức\r\n  const updateArticle = (id, updatedArticle) => {\r\n    setArticles(articles.map(article => \r\n      article.id === id \r\n        ? { ...article, ...updatedArticle, id } \r\n        : article\r\n    ));\r\n  };\r\n\r\n  // Xóa tin tức\r\n  const deleteArticle = (id) => {\r\n    setArticles(articles.filter(article => article.id !== id));\r\n    \r\n    // Xóa comments của bài viết\r\n    const newComments = { ...comments };\r\n    delete newComments[id];\r\n    setComments(newComments);\r\n  };\r\n\r\n  // Thêm comment mới\r\n  const addComment = (articleId, newComment) => {\r\n    const commentWithId = {\r\n      id: Date.now(),\r\n      ...newComment,\r\n      date: new Date().toLocaleDateString('vi-VN')\r\n    };\r\n    \r\n    setComments({\r\n      ...comments,\r\n      [articleId]: [commentWithId, ...(comments[articleId] || [])]\r\n    });\r\n    \r\n    // Cập nhật số lượng comment trong bài viết\r\n    setArticles(articles.map(article => {\r\n      if (article.id === articleId) {\r\n        return {\r\n          ...article,\r\n          commentCount: (article.commentCount || 0) + 1\r\n        };\r\n      }\r\n      return article;\r\n    }));\r\n  };\r\n\r\n  // Thêm đánh giá mới\r\n  const addRating = (articleId, rating) => {\r\n    setArticles(articles.map(article => {\r\n      if (article.id === articleId) {\r\n        const totalRatings = (article.totalRatings || 0) + 1;\r\n        const totalScore = (article.averageRating || 0) * (article.totalRatings || 0) + rating;\r\n        const newAverageRating = totalScore / totalRatings;\r\n        \r\n        return {\r\n          ...article,\r\n          averageRating: newAverageRating,\r\n          totalRatings: totalRatings\r\n        };\r\n      }\r\n      return article;\r\n    }));\r\n  };\r\n\r\n  // Xóa comment\r\n  const deleteComment = (articleId, commentId) => {\r\n    if (comments[articleId]) {\r\n      setComments({\r\n        ...comments,\r\n        [articleId]: comments[articleId].filter(comment => comment.id !== commentId)\r\n      });\r\n      \r\n      // Cập nhật số lượng comment trong bài viết\r\n      setArticles(articles.map(article => {\r\n        if (article.id === articleId) {\r\n          return {\r\n            ...article,\r\n            commentCount: Math.max((article.commentCount || 0) - 1, 0)\r\n          };\r\n        }\r\n        return article;\r\n      }));\r\n    }\r\n  };\r\n\r\n  // Lấy tin tức theo ID\r\n  const getArticleById = (id) => {\r\n    return articles.find(article => article.id === id) || null;\r\n  };\r\n\r\n  // Lấy comments của một bài viết\r\n  const getCommentsByArticleId = (articleId) => {\r\n    return comments[articleId] || [];\r\n  };\r\n\r\n  // Các giá trị và hàm được cung cấp qua context\r\n  const value = {\r\n    articles,\r\n    comments,\r\n    isLoading,\r\n    addArticle,\r\n    updateArticle,\r\n    deleteArticle,\r\n    addComment,\r\n    deleteComment,\r\n    addRating,\r\n    getArticleById,\r\n    getCommentsByArticleId\r\n  };\r\n\r\n  return (\r\n    <NewsContext.Provider value={value}>\r\n      {children}\r\n    </NewsContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}